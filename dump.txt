
atomic_module.ko:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <atomic_xchg>:
   0:	55                   	push   %rbp
   1:	89 f0                	mov    %esi,%eax
   3:	48 89 e5             	mov    %rsp,%rbp
   6:	87 07                	xchg   %eax,(%rdi)
   8:	5d                   	pop    %rbp
   9:	c3                   	retq   
   a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000000010 <atomic_and>:
  10:	55                   	push   %rbp
  11:	48 89 e5             	mov    %rsp,%rbp
  14:	f0 21 3e             	lock and %edi,(%rsi)
  17:	5d                   	pop    %rbp
  18:	c3                   	retq   
  19:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000000020 <atomic_or>:
  20:	55                   	push   %rbp
  21:	48 89 e5             	mov    %rsp,%rbp
  24:	f0 09 3e             	lock or %edi,(%rsi)
  27:	5d                   	pop    %rbp
  28:	c3                   	retq   
  29:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000000030 <atomic_xor>:
  30:	55                   	push   %rbp
  31:	48 89 e5             	mov    %rsp,%rbp
  34:	f0 31 3e             	lock xor %edi,(%rsi)
  37:	5d                   	pop    %rbp
  38:	c3                   	retq   
  39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000000040 <test_atomic_load_n>:
  40:	e8 00 00 00 00       	callq  45 <test_atomic_load_n+0x5>
  45:	55                   	push   %rbp
  46:	48 89 e5             	mov    %rsp,%rbp
  49:	48 83 ec 18          	sub    $0x18,%rsp
  4d:	65 48 8b 04 25 28 00 	mov    %gs:0x28,%rax
  54:	00 00 
  56:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  5a:	31 c0                	xor    %eax,%eax
  5c:	c7 45 e8 63 00 00 00 	movl   $0x63,-0x18(%rbp)
  63:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
  67:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  6b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  6f:	8b 00                	mov    (%rax),%eax
  71:	89 45 ec             	mov    %eax,-0x14(%rbp)
  74:	8b 55 e8             	mov    -0x18(%rbp),%edx
  77:	8b 45 ec             	mov    -0x14(%rbp),%eax
  7a:	39 c2                	cmp    %eax,%edx
  7c:	74 1f                	je     9d <test_atomic_load_n+0x5d>
  7e:	48 c7 c1 00 00 00 00 	mov    $0x0,%rcx
  85:	ba 1b 00 00 00       	mov    $0x1b,%edx
  8a:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
  91:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
  98:	e8 00 00 00 00       	callq  9d <test_atomic_load_n+0x5d>
  9d:	90                   	nop
  9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  a2:	65 48 33 04 25 28 00 	xor    %gs:0x28,%rax
  a9:	00 00 
  ab:	74 05                	je     b2 <test_atomic_load_n+0x72>
  ad:	e8 00 00 00 00       	callq  b2 <test_atomic_load_n+0x72>
  b2:	c9                   	leaveq 
  b3:	c3                   	retq   
  b4:	66 90                	xchg   %ax,%ax
  b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  bd:	00 00 00 

00000000000000c0 <test_atomic_store_n>:
  c0:	e8 00 00 00 00       	callq  c5 <test_atomic_store_n+0x5>
  c5:	55                   	push   %rbp
  c6:	48 89 e5             	mov    %rsp,%rbp
  c9:	48 83 ec 20          	sub    $0x20,%rsp
  cd:	65 48 8b 04 25 28 00 	mov    %gs:0x28,%rax
  d4:	00 00 
  d6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  da:	31 c0                	xor    %eax,%eax
  dc:	c7 45 e8 63 00 00 00 	movl   $0x63,-0x18(%rbp)
  e3:	8b 45 e8             	mov    -0x18(%rbp),%eax
  e6:	48 8d 55 e4          	lea    -0x1c(%rbp),%rdx
  ea:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  ee:	89 45 ec             	mov    %eax,-0x14(%rbp)
  f1:	8b 55 ec             	mov    -0x14(%rbp),%edx
  f4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  f8:	89 10                	mov    %edx,(%rax)
  fa:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  fd:	8b 45 e8             	mov    -0x18(%rbp),%eax
 100:	39 c2                	cmp    %eax,%edx
 102:	74 1f                	je     123 <test_atomic_store_n+0x63>
 104:	48 c7 c1 00 00 00 00 	mov    $0x0,%rcx
 10b:	ba 2b 00 00 00       	mov    $0x2b,%edx
 110:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
 117:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
 11e:	e8 00 00 00 00       	callq  123 <test_atomic_store_n+0x63>
 123:	90                   	nop
 124:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 128:	65 48 33 04 25 28 00 	xor    %gs:0x28,%rax
 12f:	00 00 
 131:	74 05                	je     138 <test_atomic_store_n+0x78>
 133:	e8 00 00 00 00       	callq  138 <test_atomic_store_n+0x78>
 138:	c9                   	leaveq 
 139:	c3                   	retq   
 13a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000000140 <test_atomic_exchange_n>:
 140:	e8 00 00 00 00       	callq  145 <test_atomic_exchange_n+0x5>
 145:	55                   	push   %rbp
 146:	48 89 e5             	mov    %rsp,%rbp
 149:	48 83 ec 18          	sub    $0x18,%rsp
 14d:	65 48 8b 04 25 28 00 	mov    %gs:0x28,%rax
 154:	00 00 
 156:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 15a:	31 c0                	xor    %eax,%eax
 15c:	c7 45 ec 31 00 00 00 	movl   $0x31,-0x14(%rbp)
 163:	c7 45 f0 63 00 00 00 	movl   $0x63,-0x10(%rbp)
 16a:	8b 55 f0             	mov    -0x10(%rbp),%edx
 16d:	48 8d 45 ec          	lea    -0x14(%rbp),%rax
 171:	89 d6                	mov    %edx,%esi
 173:	48 89 c7             	mov    %rax,%rdi
 176:	e8 85 fe ff ff       	callq  0 <atomic_xchg>
 17b:	89 45 f4             	mov    %eax,-0xc(%rbp)
 17e:	8b 45 f4             	mov    -0xc(%rbp),%eax
 181:	83 f8 31             	cmp    $0x31,%eax
 184:	74 1f                	je     1a5 <test_atomic_exchange_n+0x65>
 186:	48 c7 c1 00 00 00 00 	mov    $0x0,%rcx
 18d:	ba 3d 00 00 00       	mov    $0x3d,%edx
 192:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
 199:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
 1a0:	e8 00 00 00 00       	callq  1a5 <test_atomic_exchange_n+0x65>
 1a5:	8b 55 ec             	mov    -0x14(%rbp),%edx
 1a8:	8b 45 f0             	mov    -0x10(%rbp),%eax
 1ab:	39 c2                	cmp    %eax,%edx
 1ad:	74 1f                	je     1ce <test_atomic_exchange_n+0x8e>
 1af:	48 c7 c1 00 00 00 00 	mov    $0x0,%rcx
 1b6:	ba 3e 00 00 00       	mov    $0x3e,%edx
 1bb:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
 1c2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
 1c9:	e8 00 00 00 00       	callq  1ce <test_atomic_exchange_n+0x8e>
 1ce:	90                   	nop
 1cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 1d3:	65 48 33 04 25 28 00 	xor    %gs:0x28,%rax
 1da:	00 00 
 1dc:	74 05                	je     1e3 <test_atomic_exchange_n+0xa3>
 1de:	e8 00 00 00 00       	callq  1e3 <test_atomic_exchange_n+0xa3>
 1e3:	c9                   	leaveq 
 1e4:	c3                   	retq   
 1e5:	90                   	nop
 1e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 1ed:	00 00 00 

00000000000001f0 <test_atomic_compare_exchange_n>:
 1f0:	e8 00 00 00 00       	callq  1f5 <test_atomic_compare_exchange_n+0x5>
 1f5:	55                   	push   %rbp
 1f6:	48 89 e5             	mov    %rsp,%rbp
 1f9:	48 83 ec 30          	sub    $0x30,%rsp
 1fd:	65 48 8b 04 25 28 00 	mov    %gs:0x28,%rax
 204:	00 00 
 206:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 20a:	31 c0                	xor    %eax,%eax
 20c:	c7 45 d0 31 00 00 00 	movl   $0x31,-0x30(%rbp)
 213:	c7 45 d4 31 00 00 00 	movl   $0x31,-0x2c(%rbp)
 21a:	c7 45 d8 63 00 00 00 	movl   $0x63,-0x28(%rbp)
 221:	8b 45 d8             	mov    -0x28(%rbp),%eax
 224:	8b 55 d4             	mov    -0x2c(%rbp),%edx
 227:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
 22b:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
 22f:	89 55 dc             	mov    %edx,-0x24(%rbp)
 232:	89 45 e0             	mov    %eax,-0x20(%rbp)
 235:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 239:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 23d:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
 241:	8b 55 e0             	mov    -0x20(%rbp),%edx
 244:	8b 45 dc             	mov    -0x24(%rbp),%eax
 247:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 24b:	f0 0f b1 16          	lock cmpxchg %edx,(%rsi)
 24f:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 252:	8b 55 d0             	mov    -0x30(%rbp),%edx
 255:	8b 45 d8             	mov    -0x28(%rbp),%eax
 258:	39 c2                	cmp    %eax,%edx
 25a:	74 1f                	je     27b <test_atomic_compare_exchange_n+0x8b>
 25c:	48 c7 c1 00 00 00 00 	mov    $0x0,%rcx
 263:	ba 51 00 00 00       	mov    $0x51,%edx
 268:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
 26f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
 276:	e8 00 00 00 00       	callq  27b <test_atomic_compare_exchange_n+0x8b>
 27b:	90                   	nop
 27c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 280:	65 48 33 04 25 28 00 	xor    %gs:0x28,%rax
 287:	00 00 
 289:	74 05                	je     290 <test_atomic_compare_exchange_n+0xa0>
 28b:	e8 00 00 00 00       	callq  290 <test_atomic_compare_exchange_n+0xa0>
 290:	c9                   	leaveq 
 291:	c3                   	retq   
 292:	0f 1f 40 00          	nopl   0x0(%rax)
 296:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 29d:	00 00 00 

00000000000002a0 <test_atomic_add_fetch>:
 2a0:	e8 00 00 00 00       	callq  2a5 <test_atomic_add_fetch+0x5>
 2a5:	55                   	push   %rbp
 2a6:	48 89 e5             	mov    %rsp,%rbp
 2a9:	48 83 ec 18          	sub    $0x18,%rsp
 2ad:	65 48 8b 04 25 28 00 	mov    %gs:0x28,%rax
 2b4:	00 00 
 2b6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 2ba:	31 c0                	xor    %eax,%eax
 2bc:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
 2c3:	90                   	nop
 2c4:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%rbp)
 2cb:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
 2cf:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 2d3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 2d7:	8b 55 ec             	mov    -0x14(%rbp),%edx
 2da:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 2de:	f0 01 10             	lock add %edx,(%rax)
 2e1:	90                   	nop
 2e2:	8b 45 e8             	mov    -0x18(%rbp),%eax
 2e5:	83 f8 01             	cmp    $0x1,%eax
 2e8:	74 1f                	je     309 <test_atomic_add_fetch+0x69>
 2ea:	48 c7 c1 00 00 00 00 	mov    $0x0,%rcx
 2f1:	ba 63 00 00 00       	mov    $0x63,%edx
 2f6:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
 2fd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
 304:	e8 00 00 00 00       	callq  309 <test_atomic_add_fetch+0x69>
 309:	90                   	nop
 30a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 30e:	65 48 33 04 25 28 00 	xor    %gs:0x28,%rax
 315:	00 00 
 317:	74 05                	je     31e <test_atomic_add_fetch+0x7e>
 319:	e8 00 00 00 00       	callq  31e <test_atomic_add_fetch+0x7e>
 31e:	c9                   	leaveq 
 31f:	c3                   	retq   

0000000000000320 <test_atomic_sub_fetch>:
 320:	e8 00 00 00 00       	callq  325 <test_atomic_sub_fetch+0x5>
 325:	55                   	push   %rbp
 326:	48 89 e5             	mov    %rsp,%rbp
 329:	48 83 ec 18          	sub    $0x18,%rsp
 32d:	65 48 8b 04 25 28 00 	mov    %gs:0x28,%rax
 334:	00 00 
 336:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 33a:	31 c0                	xor    %eax,%eax
 33c:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
 343:	90                   	nop
 344:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%rbp)
 34b:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
 34f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 353:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 357:	8b 55 ec             	mov    -0x14(%rbp),%edx
 35a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 35e:	f0 29 10             	lock sub %edx,(%rax)
 361:	90                   	nop
 362:	8b 45 e8             	mov    -0x18(%rbp),%eax
 365:	83 f8 ff             	cmp    $0xffffffff,%eax
 368:	74 1f                	je     389 <test_atomic_sub_fetch+0x69>
 36a:	48 c7 c1 00 00 00 00 	mov    $0x0,%rcx
 371:	ba 72 00 00 00       	mov    $0x72,%edx
 376:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
 37d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
 384:	e8 00 00 00 00       	callq  389 <test_atomic_sub_fetch+0x69>
 389:	90                   	nop
 38a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 38e:	65 48 33 04 25 28 00 	xor    %gs:0x28,%rax
 395:	00 00 
 397:	74 05                	je     39e <test_atomic_sub_fetch+0x7e>
 399:	e8 00 00 00 00       	callq  39e <test_atomic_sub_fetch+0x7e>
 39e:	c9                   	leaveq 
 39f:	c3                   	retq   

00000000000003a0 <test_atomic_and_fetch>:
 3a0:	e8 00 00 00 00       	callq  3a5 <test_atomic_and_fetch+0x5>
 3a5:	55                   	push   %rbp
 3a6:	48 89 e5             	mov    %rsp,%rbp
 3a9:	48 83 ec 10          	sub    $0x10,%rsp
 3ad:	65 48 8b 04 25 28 00 	mov    %gs:0x28,%rax
 3b4:	00 00 
 3b6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 3ba:	31 c0                	xor    %eax,%eax
 3bc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
 3c3:	90                   	nop
 3c4:	48 8d 45 f4          	lea    -0xc(%rbp),%rax
 3c8:	48 89 c6             	mov    %rax,%rsi
 3cb:	bf 01 00 00 00       	mov    $0x1,%edi
 3d0:	e8 3b fc ff ff       	callq  10 <atomic_and>
 3d5:	90                   	nop
 3d6:	8b 45 f4             	mov    -0xc(%rbp),%eax
 3d9:	85 c0                	test   %eax,%eax
 3db:	74 1f                	je     3fc <test_atomic_and_fetch+0x5c>
 3dd:	48 c7 c1 00 00 00 00 	mov    $0x0,%rcx
 3e4:	ba 81 00 00 00       	mov    $0x81,%edx
 3e9:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
 3f0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
 3f7:	e8 00 00 00 00       	callq  3fc <test_atomic_and_fetch+0x5c>
 3fc:	90                   	nop
 3fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 401:	65 48 33 04 25 28 00 	xor    %gs:0x28,%rax
 408:	00 00 
 40a:	74 05                	je     411 <test_atomic_and_fetch+0x71>
 40c:	e8 00 00 00 00       	callq  411 <test_atomic_and_fetch+0x71>
 411:	c9                   	leaveq 
 412:	c3                   	retq   
 413:	0f 1f 00             	nopl   (%rax)
 416:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 41d:	00 00 00 

0000000000000420 <test_atomic_xor_fetch>:
 420:	e8 00 00 00 00       	callq  425 <test_atomic_xor_fetch+0x5>
 425:	55                   	push   %rbp
 426:	48 89 e5             	mov    %rsp,%rbp
 429:	48 83 ec 10          	sub    $0x10,%rsp
 42d:	65 48 8b 04 25 28 00 	mov    %gs:0x28,%rax
 434:	00 00 
 436:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 43a:	31 c0                	xor    %eax,%eax
 43c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
 443:	90                   	nop
 444:	48 8d 45 f4          	lea    -0xc(%rbp),%rax
 448:	48 89 c6             	mov    %rax,%rsi
 44b:	bf 01 00 00 00       	mov    $0x1,%edi
 450:	e8 db fb ff ff       	callq  30 <atomic_xor>
 455:	90                   	nop
 456:	8b 45 f4             	mov    -0xc(%rbp),%eax
 459:	83 f8 01             	cmp    $0x1,%eax
 45c:	74 1f                	je     47d <test_atomic_xor_fetch+0x5d>
 45e:	48 c7 c1 00 00 00 00 	mov    $0x0,%rcx
 465:	ba 90 00 00 00       	mov    $0x90,%edx
 46a:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
 471:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
 478:	e8 00 00 00 00       	callq  47d <test_atomic_xor_fetch+0x5d>
 47d:	90                   	nop
 47e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 482:	65 48 33 04 25 28 00 	xor    %gs:0x28,%rax
 489:	00 00 
 48b:	74 05                	je     492 <test_atomic_xor_fetch+0x72>
 48d:	e8 00 00 00 00       	callq  492 <test_atomic_xor_fetch+0x72>
 492:	c9                   	leaveq 
 493:	c3                   	retq   
 494:	66 90                	xchg   %ax,%ax
 496:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 49d:	00 00 00 

00000000000004a0 <test_atomic_or_fetch>:
 4a0:	e8 00 00 00 00       	callq  4a5 <test_atomic_or_fetch+0x5>
 4a5:	55                   	push   %rbp
 4a6:	48 89 e5             	mov    %rsp,%rbp
 4a9:	48 83 ec 10          	sub    $0x10,%rsp
 4ad:	65 48 8b 04 25 28 00 	mov    %gs:0x28,%rax
 4b4:	00 00 
 4b6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 4ba:	31 c0                	xor    %eax,%eax
 4bc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
 4c3:	90                   	nop
 4c4:	48 8d 45 f4          	lea    -0xc(%rbp),%rax
 4c8:	48 89 c6             	mov    %rax,%rsi
 4cb:	bf 01 00 00 00       	mov    $0x1,%edi
 4d0:	e8 4b fb ff ff       	callq  20 <atomic_or>
 4d5:	90                   	nop
 4d6:	8b 45 f4             	mov    -0xc(%rbp),%eax
 4d9:	83 f8 01             	cmp    $0x1,%eax
 4dc:	74 1f                	je     4fd <test_atomic_or_fetch+0x5d>
 4de:	48 c7 c1 00 00 00 00 	mov    $0x0,%rcx
 4e5:	ba 9f 00 00 00       	mov    $0x9f,%edx
 4ea:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
 4f1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
 4f8:	e8 00 00 00 00       	callq  4fd <test_atomic_or_fetch+0x5d>
 4fd:	90                   	nop
 4fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 502:	65 48 33 04 25 28 00 	xor    %gs:0x28,%rax
 509:	00 00 
 50b:	74 05                	je     512 <test_atomic_or_fetch+0x72>
 50d:	e8 00 00 00 00       	callq  512 <test_atomic_or_fetch+0x72>
 512:	c9                   	leaveq 
 513:	c3                   	retq   
 514:	66 90                	xchg   %ax,%ax
 516:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 51d:	00 00 00 

0000000000000520 <test_atomic_nand_fetch>:
 520:	e8 00 00 00 00       	callq  525 <test_atomic_nand_fetch+0x5>
 525:	55                   	push   %rbp
 526:	48 89 e5             	mov    %rsp,%rbp
 529:	e8 00 00 00 00       	callq  52e <test_atomic_nand_fetch+0xe>
 52e:	5d                   	pop    %rbp
 52f:	c3                   	retq   

0000000000000530 <test_atomic_fetch_add>:
 530:	e8 00 00 00 00       	callq  535 <test_atomic_fetch_add+0x5>
 535:	55                   	push   %rbp
 536:	48 89 e5             	mov    %rsp,%rbp
 539:	48 83 ec 18          	sub    $0x18,%rsp
 53d:	65 48 8b 04 25 28 00 	mov    %gs:0x28,%rax
 544:	00 00 
 546:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 54a:	31 c0                	xor    %eax,%eax
 54c:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
 553:	90                   	nop
 554:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%rbp)
 55b:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
 55f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 563:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 567:	8b 55 ec             	mov    -0x14(%rbp),%edx
 56a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 56e:	f0 01 10             	lock add %edx,(%rax)
 571:	90                   	nop
 572:	8b 45 e8             	mov    -0x18(%rbp),%eax
 575:	83 f8 01             	cmp    $0x1,%eax
 578:	74 1f                	je     599 <test_atomic_fetch_add+0x69>
 57a:	48 c7 c1 00 00 00 00 	mov    $0x0,%rcx
 581:	ba ba 00 00 00       	mov    $0xba,%edx
 586:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
 58d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
 594:	e8 00 00 00 00       	callq  599 <test_atomic_fetch_add+0x69>
 599:	90                   	nop
 59a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 59e:	65 48 33 04 25 28 00 	xor    %gs:0x28,%rax
 5a5:	00 00 
 5a7:	74 05                	je     5ae <test_atomic_fetch_add+0x7e>
 5a9:	e8 00 00 00 00       	callq  5ae <test_atomic_fetch_add+0x7e>
 5ae:	c9                   	leaveq 
 5af:	c3                   	retq   

00000000000005b0 <test_atomic_fetch_sub>:
 5b0:	e8 00 00 00 00       	callq  5b5 <test_atomic_fetch_sub+0x5>
 5b5:	55                   	push   %rbp
 5b6:	48 89 e5             	mov    %rsp,%rbp
 5b9:	48 83 ec 18          	sub    $0x18,%rsp
 5bd:	65 48 8b 04 25 28 00 	mov    %gs:0x28,%rax
 5c4:	00 00 
 5c6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 5ca:	31 c0                	xor    %eax,%eax
 5cc:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
 5d3:	90                   	nop
 5d4:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%rbp)
 5db:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
 5df:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 5e3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 5e7:	8b 55 ec             	mov    -0x14(%rbp),%edx
 5ea:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 5ee:	f0 29 10             	lock sub %edx,(%rax)
 5f1:	90                   	nop
 5f2:	8b 45 e8             	mov    -0x18(%rbp),%eax
 5f5:	83 f8 ff             	cmp    $0xffffffff,%eax
 5f8:	74 1f                	je     619 <test_atomic_fetch_sub+0x69>
 5fa:	48 c7 c1 00 00 00 00 	mov    $0x0,%rcx
 601:	ba c9 00 00 00       	mov    $0xc9,%edx
 606:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
 60d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
 614:	e8 00 00 00 00       	callq  619 <test_atomic_fetch_sub+0x69>
 619:	90                   	nop
 61a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 61e:	65 48 33 04 25 28 00 	xor    %gs:0x28,%rax
 625:	00 00 
 627:	74 05                	je     62e <test_atomic_fetch_sub+0x7e>
 629:	e8 00 00 00 00       	callq  62e <test_atomic_fetch_sub+0x7e>
 62e:	c9                   	leaveq 
 62f:	c3                   	retq   

0000000000000630 <test_atomic_fetch_and>:
 630:	e8 00 00 00 00       	callq  635 <test_atomic_fetch_and+0x5>
 635:	55                   	push   %rbp
 636:	48 89 e5             	mov    %rsp,%rbp
 639:	48 83 ec 10          	sub    $0x10,%rsp
 63d:	65 48 8b 04 25 28 00 	mov    %gs:0x28,%rax
 644:	00 00 
 646:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 64a:	31 c0                	xor    %eax,%eax
 64c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
 653:	90                   	nop
 654:	48 8d 45 f4          	lea    -0xc(%rbp),%rax
 658:	48 89 c6             	mov    %rax,%rsi
 65b:	bf 01 00 00 00       	mov    $0x1,%edi
 660:	e8 ab f9 ff ff       	callq  10 <atomic_and>
 665:	90                   	nop
 666:	8b 45 f4             	mov    -0xc(%rbp),%eax
 669:	85 c0                	test   %eax,%eax
 66b:	74 1f                	je     68c <test_atomic_fetch_and+0x5c>
 66d:	48 c7 c1 00 00 00 00 	mov    $0x0,%rcx
 674:	ba d8 00 00 00       	mov    $0xd8,%edx
 679:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
 680:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
 687:	e8 00 00 00 00       	callq  68c <test_atomic_fetch_and+0x5c>
 68c:	90                   	nop
 68d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 691:	65 48 33 04 25 28 00 	xor    %gs:0x28,%rax
 698:	00 00 
 69a:	74 05                	je     6a1 <test_atomic_fetch_and+0x71>
 69c:	e8 00 00 00 00       	callq  6a1 <test_atomic_fetch_and+0x71>
 6a1:	c9                   	leaveq 
 6a2:	c3                   	retq   
 6a3:	0f 1f 00             	nopl   (%rax)
 6a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 6ad:	00 00 00 

00000000000006b0 <test_atomic_fetch_xor>:
 6b0:	e8 00 00 00 00       	callq  6b5 <test_atomic_fetch_xor+0x5>
 6b5:	55                   	push   %rbp
 6b6:	48 89 e5             	mov    %rsp,%rbp
 6b9:	48 83 ec 10          	sub    $0x10,%rsp
 6bd:	65 48 8b 04 25 28 00 	mov    %gs:0x28,%rax
 6c4:	00 00 
 6c6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 6ca:	31 c0                	xor    %eax,%eax
 6cc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
 6d3:	90                   	nop
 6d4:	48 8d 45 f4          	lea    -0xc(%rbp),%rax
 6d8:	48 89 c6             	mov    %rax,%rsi
 6db:	bf 01 00 00 00       	mov    $0x1,%edi
 6e0:	e8 4b f9 ff ff       	callq  30 <atomic_xor>
 6e5:	90                   	nop
 6e6:	8b 45 f4             	mov    -0xc(%rbp),%eax
 6e9:	83 f8 01             	cmp    $0x1,%eax
 6ec:	74 1f                	je     70d <test_atomic_fetch_xor+0x5d>
 6ee:	48 c7 c1 00 00 00 00 	mov    $0x0,%rcx
 6f5:	ba e7 00 00 00       	mov    $0xe7,%edx
 6fa:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
 701:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
 708:	e8 00 00 00 00       	callq  70d <test_atomic_fetch_xor+0x5d>
 70d:	90                   	nop
 70e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 712:	65 48 33 04 25 28 00 	xor    %gs:0x28,%rax
 719:	00 00 
 71b:	74 05                	je     722 <test_atomic_fetch_xor+0x72>
 71d:	e8 00 00 00 00       	callq  722 <test_atomic_fetch_xor+0x72>
 722:	c9                   	leaveq 
 723:	c3                   	retq   
 724:	66 90                	xchg   %ax,%ax
 726:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 72d:	00 00 00 

0000000000000730 <test_atomic_fetch_or>:
 730:	e8 00 00 00 00       	callq  735 <test_atomic_fetch_or+0x5>
 735:	55                   	push   %rbp
 736:	48 89 e5             	mov    %rsp,%rbp
 739:	48 83 ec 10          	sub    $0x10,%rsp
 73d:	65 48 8b 04 25 28 00 	mov    %gs:0x28,%rax
 744:	00 00 
 746:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 74a:	31 c0                	xor    %eax,%eax
 74c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
 753:	90                   	nop
 754:	48 8d 45 f4          	lea    -0xc(%rbp),%rax
 758:	48 89 c6             	mov    %rax,%rsi
 75b:	bf 01 00 00 00       	mov    $0x1,%edi
 760:	e8 bb f8 ff ff       	callq  20 <atomic_or>
 765:	90                   	nop
 766:	8b 45 f4             	mov    -0xc(%rbp),%eax
 769:	83 f8 01             	cmp    $0x1,%eax
 76c:	74 1f                	je     78d <test_atomic_fetch_or+0x5d>
 76e:	48 c7 c1 00 00 00 00 	mov    $0x0,%rcx
 775:	ba f6 00 00 00       	mov    $0xf6,%edx
 77a:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
 781:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
 788:	e8 00 00 00 00       	callq  78d <test_atomic_fetch_or+0x5d>
 78d:	90                   	nop
 78e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 792:	65 48 33 04 25 28 00 	xor    %gs:0x28,%rax
 799:	00 00 
 79b:	74 05                	je     7a2 <test_atomic_fetch_or+0x72>
 79d:	e8 00 00 00 00       	callq  7a2 <test_atomic_fetch_or+0x72>
 7a2:	c9                   	leaveq 
 7a3:	c3                   	retq   
 7a4:	66 90                	xchg   %ax,%ax
 7a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 7ad:	00 00 00 

00000000000007b0 <test_atomic_fetch_nand>:
 7b0:	e8 00 00 00 00       	callq  7b5 <test_atomic_fetch_nand+0x5>
 7b5:	55                   	push   %rbp
 7b6:	48 89 e5             	mov    %rsp,%rbp
 7b9:	e8 00 00 00 00       	callq  7be <test_atomic_fetch_nand+0xe>
 7be:	5d                   	pop    %rbp
 7bf:	c3                   	retq   

00000000000007c0 <test_atomic_test_and_set>:
 7c0:	e8 00 00 00 00       	callq  7c5 <test_atomic_test_and_set+0x5>
 7c5:	55                   	push   %rbp
 7c6:	48 89 e5             	mov    %rsp,%rbp
 7c9:	e8 00 00 00 00       	callq  7ce <test_atomic_test_and_set+0xe>
 7ce:	5d                   	pop    %rbp
 7cf:	c3                   	retq   

00000000000007d0 <test_atomic_clear>:
 7d0:	e8 00 00 00 00       	callq  7d5 <test_atomic_clear+0x5>
 7d5:	55                   	push   %rbp
 7d6:	48 89 e5             	mov    %rsp,%rbp
 7d9:	e8 00 00 00 00       	callq  7de <test_atomic_clear+0xe>
 7de:	5d                   	pop    %rbp
 7df:	c3                   	retq   

00000000000007e0 <test_atomic_thread_fence>:
 7e0:	e8 00 00 00 00       	callq  7e5 <test_atomic_thread_fence+0x5>
 7e5:	55                   	push   %rbp
 7e6:	48 89 e5             	mov    %rsp,%rbp
 7e9:	e8 00 00 00 00       	callq  7ee <test_atomic_thread_fence+0xe>
 7ee:	5d                   	pop    %rbp
 7ef:	c3                   	retq   

00000000000007f0 <test_atomic_signal_fence>:
 7f0:	e8 00 00 00 00       	callq  7f5 <test_atomic_signal_fence+0x5>
 7f5:	55                   	push   %rbp
 7f6:	48 89 e5             	mov    %rsp,%rbp
 7f9:	90                   	nop
 7fa:	5d                   	pop    %rbp
 7fb:	c3                   	retq   
 7fc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000800 <test_atomic_always_lock_free>:
 800:	e8 00 00 00 00       	callq  805 <test_atomic_always_lock_free+0x5>
 805:	55                   	push   %rbp
 806:	48 89 e5             	mov    %rsp,%rbp
 809:	5d                   	pop    %rbp
 80a:	c3                   	retq   
 80b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000000810 <test_atomic_is_lock_free>:
 810:	e8 00 00 00 00       	callq  815 <test_atomic_is_lock_free+0x5>
 815:	55                   	push   %rbp
 816:	48 89 e5             	mov    %rsp,%rbp
 819:	5d                   	pop    %rbp
 81a:	c3                   	retq   

Disassembly of section .init.text:

0000000000000000 <init_module>:
   0:	55                   	push   %rbp
   1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
   8:	48 89 e5             	mov    %rsp,%rbp
   b:	e8 00 00 00 00       	callq  10 <init_module+0x10>
  10:	e8 00 00 00 00       	callq  15 <init_module+0x15>
  15:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
  1c:	e8 00 00 00 00       	callq  21 <init_module+0x21>
  21:	e8 00 00 00 00       	callq  26 <init_module+0x26>
  26:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
  2d:	e8 00 00 00 00       	callq  32 <init_module+0x32>
  32:	e8 00 00 00 00       	callq  37 <init_module+0x37>
  37:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
  3e:	e8 00 00 00 00       	callq  43 <init_module+0x43>
  43:	e8 00 00 00 00       	callq  48 <init_module+0x48>
  48:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
  4f:	e8 00 00 00 00       	callq  54 <init_module+0x54>
  54:	e8 00 00 00 00       	callq  59 <init_module+0x59>
  59:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
  60:	e8 00 00 00 00       	callq  65 <init_module+0x65>
  65:	e8 00 00 00 00       	callq  6a <init_module+0x6a>
  6a:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
  71:	e8 00 00 00 00       	callq  76 <init_module+0x76>
  76:	e8 00 00 00 00       	callq  7b <init_module+0x7b>
  7b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
  82:	e8 00 00 00 00       	callq  87 <init_module+0x87>
  87:	e8 00 00 00 00       	callq  8c <init_module+0x8c>
  8c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
  93:	e8 00 00 00 00       	callq  98 <init_module+0x98>
  98:	e8 00 00 00 00       	callq  9d <init_module+0x9d>
  9d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
  a4:	e8 00 00 00 00       	callq  a9 <init_module+0xa9>
  a9:	e8 00 00 00 00       	callq  ae <init_module+0xae>
  ae:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
  b5:	e8 00 00 00 00       	callq  ba <init_module+0xba>
  ba:	e8 00 00 00 00       	callq  bf <init_module+0xbf>
  bf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
  c6:	e8 00 00 00 00       	callq  cb <init_module+0xcb>
  cb:	e8 00 00 00 00       	callq  d0 <init_module+0xd0>
  d0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
  d7:	e8 00 00 00 00       	callq  dc <init_module+0xdc>
  dc:	e8 00 00 00 00       	callq  e1 <init_module+0xe1>
  e1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
  e8:	e8 00 00 00 00       	callq  ed <init_module+0xed>
  ed:	e8 00 00 00 00       	callq  f2 <init_module+0xf2>
  f2:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
  f9:	e8 00 00 00 00       	callq  fe <init_module+0xfe>
  fe:	e8 00 00 00 00       	callq  103 <init_module+0x103>
 103:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
 10a:	e8 00 00 00 00       	callq  10f <init_module+0x10f>
 10f:	e8 00 00 00 00       	callq  114 <init_module+0x114>
 114:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
 11b:	e8 00 00 00 00       	callq  120 <init_module+0x120>
 120:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
 127:	e8 00 00 00 00       	callq  12c <init_module+0x12c>
 12c:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
 133:	e8 00 00 00 00       	callq  138 <init_module+0x138>
 138:	31 c0                	xor    %eax,%eax
 13a:	5d                   	pop    %rbp
 13b:	c3                   	retq   

Disassembly of section .exit.text:

0000000000000000 <cleanup_module>:
   0:	55                   	push   %rbp
   1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
   8:	48 89 e5             	mov    %rsp,%rbp
   b:	e8 00 00 00 00       	callq  10 <cleanup_module+0x10>
  10:	5d                   	pop    %rbp
  11:	c3                   	retq   
